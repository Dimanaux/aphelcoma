- decorated_problem = problem.decorate

h2 = problem.title
p.small
  = "#{t('common.published')} #{decorated_problem.created_at}, "
  = decorated_problem.author_link
p
  = render "layouts/markdown", html: decorated_problem.text_html, cached: true
.clearfix
  .float-left
    = link_to t("common.back"), problems_path, class: "card-link"
    - if policy(problem).edit?
      = link_to t("common.edit"), edit_problem_path(problem), class: "card-link"
    - if policy(problem).destroy?
      = link_to t("common.destroy"), problem,
                      method: :delete,
                      data: { confirm: t("common.confirmation") },
                      class: "card-link"
  .float-right
    - if policy(problem.solutions).index?
      => link_to t("solutions.label.single"), solutions_path(problem)
    - if policy(:solution).new?
      => link_to t("solutions.actions.new"),
                      new_solution_path(problem),
                      class: "btn btn-outline-success"
    = pluralize(decorated_problem.views_count, t("views.label.single"))

.mb-4
  = render "comments/comments", comments: decorated_problem.comments, problem: problem
